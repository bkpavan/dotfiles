# tell tmux to use 256 colors
set -g default-terminal "screen-256color"
# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
set-option -g prefix2 `
bind-key C-a last-window

# vim key bindings
setw -g mode-keys vi

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
#set -g status-left ""
#set -g status-right "#[fg=green]#H"

# statusbar --------------------------------------------------------------
 
# # default statusbar colors
set-option -g status-fg white
set-option -g status-bg black
set-option -g status-attr default
 
# # default window title colors
set-window-option -g window-status-fg cyan
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
 
# # active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-attr bright
 
# # command/message line colors
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright
 
# # Refresh the status bar every 30 seconds.
set-option -g status-interval 30
 
# # The status bar itself.
set -g status-justify centre
set -g status-left-length 40
set -g status-left "#[fg=#009900]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=green]#H #[fg=cyan]%d %b %R"
 
set-option -g display-time 1000
 
# Reload source file
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
set-window-option -g window-status-current-bg red

# Rebind Ctrl-| to split the window horizontally [ | ]
# inserts a split vertically
unbind %
bind | split-window -h

# Bind Ctrl-- (dash) to split the window vertically [ --- ]
# inserts a split horizontally
bind - split-window -v
